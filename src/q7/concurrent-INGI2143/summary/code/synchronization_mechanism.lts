// Rendez-vous
MAKER = (make->ready->MAKER).
USER = (ready->use->USER).

// Shared variable as an explicit separate process
const N = 2
range T = 0..N
VAR = VAR[0],
VAR[u:T] = (read[u] -> VAR[u] | write[v:T] -> VAR[v]).

// Lock
LOCK = (acquire->release->LOCK).

// Semaphore
const Max = 3
range Int = 0..Max
SEMAPHORE(N=0) = SEMA[N],
SEMA[v:Int] = (up->SEMA[v+1])
			|when(v>0) down->SEMA[v-1]),
SEMA[Max+1] = ERROR.

// Buffer, use many instance to make a table of buffer
//or a channel if they communicate with each other
range T = 0..2
BUFFER1 = (in[x:T] -> out[x]->BUFFER1).

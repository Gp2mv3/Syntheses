fluent CRITICAL[i:1..N] = <p[i].enter,p[i].exit>

// Globally
assert MUTEX = []! (CRITICAL[1] && CRITCAL[2])

// Eventually
assert LIVE = <> (CRITICAL[1] || CRITICAL[2])

// Strong until (knock must happen)
assert POLITE1 = (!enter U knock)

// Weak until (knock can happen)
assert POLITE2 = (!enter W knock)

// Next
assert QUICK = (p[1].enter -> X p[1].exit)
